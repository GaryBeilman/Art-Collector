{"version":3,"sources":["api/index.js","components/Feature.js","components/Loading.js","components/Preview.js","components/Search.js","components/Title.js","index.js"],"names":["BASE_URL","KEY","fetchQueryResultsFromTermAndValue","_x","_x2","_fetchQueryResultsFromTermAndValue","apply","this","arguments","_callee","term","value","response","data","_regeneratorRuntime","wrap","_context","prev","next","fetch","concat","encodeURI","split","join","sent","json","abrupt","t0","stop","fetchQueryResultsFromURL","_x3","_fetchQueryResultsFromURL","_callee2","url","_context2","fetchQueryResults","_x4","_fetchQueryResults","_callee3","_ref","century","classification","queryString","_context3","fetchAllCenturies","_fetchAllCenturies","_callee4","records","_context4","localStorage","getItem","JSON","parse","setItem","stringify","fetchAllClassifications","_fetchAllClassifications","_callee5","_context5","Searchable","props","searchTerm","searchValue","setIsLoading","setSearchResults","react_default","a","createElement","className","href","onClick","Object","asyncToGenerator","Feature_regeneratorRuntime","mark","event","results","preventDefault","console","error","finish","Feature","featuredResult","id","_ref2","title","dated","images","description","primaryimageurl","culture","style","technique","medium","dimensions","people","department","division","contact","creditline","react","Feature_Searchable","assign","map","person","idx","key","displayname","image","src","baseimageurl","alt","alttext","Loading","Preview","setFeaturedResult","_props$searchResults","searchResults","info","fetchPage","_fetchPage","Preview_regeneratorRuntime","pageUrl","disabled","record","index","Search","_useState","useState","_useState2","slicedToArray","centuryList","setCenturyList","_useState3","_useState4","classificationList","setClassificationList","_useState5","_useState6","setQueryString","_useState7","_useState8","setCentury","_useState9","_useState10","setClassification","useEffect","Promise","all","then","centuries","classifications","catch","onSubmit","_ref3","Search_regeneratorRuntime","htmlFor","type","placeholder","onChange","target","length","name","Title","App","isLoading","components_Title","components_Search","components_Preview","components_Feature","components_Loading","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0211ee04.chunk.js","sourcesContent":["/**\n * This file features and exports all of your calls to the API\n * \n * You need to replace YOUR_API_KEY in the string associated with KEY with your actual API key\n */\n export const BASE_URL = 'https://api.harvardartmuseums.org';\n export const KEY = 'apikey=4866cf2f-91a4-4a71-ada1-73d6321a91a3';\n \n /**\n  * This will make a call to the API for a single term and value (e.g. \"person\", and \"unknown\"), and return the result\n  */\n export async function fetchQueryResultsFromTermAndValue(term, value) {\n   try {\n     const response = await fetch(`${ BASE_URL }/object?${ KEY }&${ term }=${ encodeURI(value.split('-').join('|')) }`);\n     const data = await response.json();\n \n     return data;\n   } catch (error) {\n     throw error;\n   }\n }\n \n /**\n  * This will make a call to the API for a preformed url (useful for previous and next buttons), and return the result\n  */\n export async function fetchQueryResultsFromURL(url) {\n   try {\n     const response = await fetch(url);\n     const data = await response.json();\n \n     return data;\n   } catch (error) {\n     throw error;\n   }\n }\n \n /**\n  * Requires an object { century: '', classification: '', queryString: '' } to be passed in as an argument\n  * \n  * Then makes a call to the API, and returns the first page of results\n  */\n export async function fetchQueryResults({\n   century,\n   classification,\n   queryString,\n }) {\n   const url = `${ BASE_URL }/object?${ KEY }&classification=${ classification }&century=${ \n     century }&keyword=${ queryString }`;\n \n   try {\n     const response = await fetch(url);\n     const data = await response.json();\n \n     return data;\n   } catch (error) {\n     throw error;\n   }\n }\n \n /**\n  * This returns early if there are centuries stored in localStorage, or fetches them from the API and stores them in localStorage if not\n  */\n export async function fetchAllCenturies() {\n   if (localStorage.getItem('centuries')) {\n     return JSON.parse(localStorage.getItem('centuries'));\n   }\n \n   const url = `${ BASE_URL }/century?${ KEY }&size=100&sort=temporalorder`;\n \n   try {\n     const response = await fetch(url);\n     const data = await response.json();\n     const records = data.records;\n \n     localStorage.setItem('centuries', JSON.stringify(records));\n \n     return records;\n   } catch (error) {\n     throw error;\n   }\n }\n \n /**\n  * This returns early if there are classifications stored in localStorage, or fetches them from the API and stores them in localStorage if not \n  */\n export async function fetchAllClassifications() {\n   if (localStorage.getItem('classifications')) {\n     return JSON.parse(localStorage.getItem('classifications'));\n   }\n \n   const url = `${ BASE_URL }/classification?${ KEY }&size=100&sort=name`;\n \n   try {\n     const response = await fetch(url);\n     const data = await response.json();\n     const records = data.records;\n \n     localStorage.setItem('classifications', JSON.stringify(records));\n \n     return records;\n   } catch (error) {\n     throw error;\n   }\n }","import React, { Fragment } from 'react';\n\n// Don't touch this import\nimport { fetchQueryResultsFromTermAndValue } from '../api';\n\n/**\n * We need a new component called Searchable which:\n * \n * Has a template like this:\n * \n * <span className=\"content\">\n *  <a href=\"#\" onClick={async (event) => {}}>SOME SEARCH TERM</a>\n * </span>\n *\n * You'll need to read searchTerm, searchValue, setIsLoading, and setSearchResults off of the props.\n * \n * When someone clicks the anchor tag, you should:\n * \n * - preventDefault on the event\n * - call setIsLoading, set it to true\n * \n * Then start a try/catch/finally block:\n * \n * try:\n *  - await the result of fetchQueryResultsFromTermAndValue, passing in searchTerm and searchValue\n *  - send the result to setSearchResults (which will update the Preview component)\n * catch: \n *  - console.error the error\n * finally:\n *  - call setIsLoading, set it to false\n */\nconst Searchable = (props) => {\n\n    const {\n        searchTerm,\n        searchValue,\n        setIsLoading,\n        setSearchResults\n    } = props\n\n    return <span className=\"content\">\n        <a href=\"#\" onClick={async (event) => {\n            event.preventDefault()\n            setIsLoading(true)\n\n            try {\n                const results = await fetchQueryResultsFromTermAndValue(searchTerm, searchValue)\n                setSearchResults(results)\n            } catch (error) {\n                console.error(error)\n            } finally {\n                setIsLoading(false)\n            }\n        }}> {searchValue} </a>\n    </span>\n\n}\n\n/**\n * We need a new component called Feature which looks like this when no featuredResult is passed in as a prop:\n * \n * <main id=\"feature\"></main>\n * \n * And like this when one is:\n * \n * <main id=\"feature\">\n *   <div className=\"object-feature\">\n *     <header>\n *       <h3>OBJECT TITLE</h3>\n *       <h4>WHEN IT IS DATED</h4>\n *     </header>\n *     <section className=\"facts\">\n *       <span className=\"title\">FACT NAME</span>\n *       <span className=\"content\">FACT VALUE</span>\n *       <span className=\"title\">NEXT FACT NAME</span>\n *       <span className=\"content\">NEXT FACT VALUE</span>\n *     </section>\n *     <section className=\"photos\">\n *       <img src=IMAGE_URL alt=SOMETHING_WORTHWHILE />\n *     </section>\n *   </div>\n * </main>\n * \n * The different facts look like this: title, dated, images, primaryimageurl, description, culture, style, \n * technique, medium, dimensions, people, department, division, contact, creditline\n * \n * The <Searchable /> ones are: culture, technique, medium (first toLowerCase it), and person.displayname (one for each PEOPLE)\n * \n * NOTE: people and images are likely to be arrays, and will need to be mapped over if they exist\n * \n * This component should be exported as default.\n */\nconst Feature = (props) => {\n\n    const { featuredResult } = props // this will contain all the facts needed\n    // console.log(featuredResult)\n\n    if (!featuredResult) {\n        return <main id=\"feature\"></main>\n    }\n\n    const {\n        title,\n        dated,\n        images, // THIS IS AN ARRAY\n        primaryimageurl, // only use if making image or something clickable\n        description,\n        culture, // SEARCHABLE\n        style,\n        technique, // SEARCHABLE\n        medium, // SEARCHABLE\n        dimensions,\n        people, // SEARCHABLE -- person.displayname\n        department,\n        division,\n        contact,\n        creditline,\n    } = featuredResult || {}\n\n    return <main id=\"feature\">\n        <div className=\"object-feature\">\n            <header>\n                <h3> {title}</h3> {/*<h3> {featuredResult.title}</h3>*/}\n                <h4> {dated} </h4>\n            </header>\n            <section className=\"facts\">\n                {/* <span className=\"title\">FACT NAME</span>\n                <span className=\"content\">FACT VALUE</span> */}\n                {\n                    description ?\n                        <Fragment>\n                            <span className=\"title\">Description</span>\n                            <span className=\"content\">{description}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    dated ?\n                        <Fragment>\n                            <span className=\"title\">Dated</span>\n                            <span className=\"content\">{dated}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    style ?\n                        <Fragment>\n                            <span className=\"title\">Style</span>\n                            <span className=\"content\">{style}</span>\n                        </Fragment>\n                        : null\n                }\n                {\n                    technique ?\n                        <Fragment>\n                            <span className=\"title\">Technique</span>\n                            <Searchable searchTerm=\"technique\" searchValue={technique} {...props} />\n                        </Fragment>\n                        : null\n                }\n                {\n                    medium ?\n                        <Fragment>\n                            <span className=\"title\">Medium</span>\n                            <Searchable searchTerm=\"medium\" searchValue={medium} {...props} />\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    dimensions ?\n                        <Fragment>\n                            <span className=\"title\">Dimensions</span>\n                            <span className=\"content\">{dimensions}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    department ?\n                        <Fragment>\n                            <span className=\"title\">Department</span>\n                            <span className=\"content\">{department}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    division ?\n                        <Fragment>\n                            <span className=\"title\">Division</span>\n                            <span className=\"content\">{division}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    contact ?\n                        <Fragment>\n                            <span className=\"title\">Contact</span>\n                            <span className=\"content\">{contact}</span>\n                        </Fragment>\n                        : null\n                }\n\n                {\n                    creditline ?\n                        <Fragment>\n                            <span className=\"title\">CreditLine</span>\n                            <span className=\"content\">{creditline}</span>\n                        </Fragment>\n                        : null\n                }\n\n\n\n                {\n                    culture ?\n                        <Fragment>\n                            <span className=\"title\">Culture</span>\n                            <Searchable searchTerm=\"culture\" searchValue={culture} {...props} />\n                        </Fragment>\n                        : null\n                }\n                {/* HW: ADD THE OTHERS HERE */}\n                {\n                    people ?\n                        people.map((person, idx) =>\n                            <Fragment key={idx} >\n                                <span className=\"title\">Person</span>\n                                <Searchable searchTerm=\"person\" searchValue={person.displayname} {...props} />\n                            </Fragment>\n                        )\n                        : null\n                }\n            </section>\n            <section className=\"photos\">\n                {\n                    images ?\n                        images.map((image) => {\n                            return (<img src={image.baseimageurl} alt={image.alttext} />)\n\n                        })\n                        :\n                        null }\n            </section>\n        </div>\n    </main>\n}\n\nexport default Feature;","import React from 'react';\n\n/**\n * Create and export a component called Loading which uses this static HTML template:\n * \n * <div id=\"loading\">\n *   <h2 className=\"message\">Searching...</h2>\n * </div>\n */\n\nconst Loading = () => {\n    return (\n        <div id=\"loading\">\n            <h2 className=\"message\">Searching...</h2>\n        </div>\n    )\n}\n\nexport default Loading","import React from 'react';\n\n/**\n * We need to import fetchQueryResultsFromURL since we will sometimes have urls in info.prev and info.next\n * which are query urls.\n */\nimport { fetchQueryResultsFromURL } from '../api';\n\nconst Preview = (props) => {\n  /**\n   * Destructure setSearchResults, setFeaturedResult, and setIsLoading from props\n   * and also destructure info and records from props.searchResults\n   * \n   * You need info, records, setSearchResults, setFeaturedResult, and setIsLoading as available constants\n   */\n\n\n  /**\n   * Don't touch this function, it's good to go.\n   * \n   * It has to be defined inside the Preview component to have access to setIsLoading, setSearchResults, etc...\n   */\n\n   const {setSearchResults, setFeaturedResult, setIsLoading} = props\n   const {info, records} = props.searchResults\n  \n\n  async function fetchPage(pageUrl) {\n    setIsLoading(true);\n\n    try {\n      const results = await fetchQueryResultsFromURL(pageUrl);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return <aside id=\"preview\">\n    <header className=\"pagination\">\n      {/* This button should be disabled if nothing is set in info.prev, and should call fetchPage with info.prev when clicked */}\n      <button\n        disabled={!info.prev}\n        className=\"previous\"\n        onClick={() => fetchPage(info.prev)}>Previous</button>\n      {/* This button should be disabled if nothing is set in info.next, and should call fetchPage with info.next when clicked */}\n      <button\n        disabled={!info.next}\n        className=\"next\"\n        onClick={() => fetchPage(info.next)}>Next</button>\n    </header>\n    <section className=\"results\">\n      {\n        // Here we should map over the records, and render something like this for each one:\n        records.map((record, index) => {\n          return (<div\n            key={index}\n            className=\"object-preview\"\n            onClick={(event) => {\n              // prevent the default\n              // set the featured result to be this record, using setFeaturedResult\n              event.preventDefault();\n              setFeaturedResult(record)\n            }}>\n            {\n              // if the record.primaryimageurl exists, show this: <img src={ record.primaryimageurl } alt={ record.description } />, otherwise show nothing \n              record.primaryimageurl ?  <img src={ record.primaryimageurl } alt={ record.description } /> : ''\n            }\n            {\n              // if the record.title exists, add this: <h3>{ record.title }</h3>, otherwise show this: <h3>MISSING INFO</h3>\n              record.title ? <h3><a href={`${record.title}`}>{ record.title }</a></h3> : <h3>MISSING INFO</h3>\n            }\n          </div>)\n        })\n      }\n    </section>\n  </aside>\n}\n\nexport default Preview;","import React, { useEffect, useState } from 'react';\n\n/**\n * Don't touch these imports!\n */\nimport {\n  fetchAllCenturies,\n  fetchAllClassifications,\n  fetchQueryResults\n} from '../api';\n\nconst Search = (props) => {\n  // the props we passed in is setIsLoading and setSearchResults\n  // remember props is an object\n  // console.log(\"in Search component\")\n  // console.log(props) -> {setIsLoading: ƒ, setSearchResults: ƒ}\n\n  // Make sure to destructure setIsLoading and setSearchResults from the props\n\n  // props.setIsLoading(...)\n  // we are matching the name when deconstructing\n  const { setIsLoading, setSearchResults } = props\n\n  // we can now do setIsLoading()\n\n  /**\n   * We are at the Search component, a child of app. This has a form, so we need to use useState for\n   * our controlled inputs:\n   * \n   * centuryList, setCenturyList (default should be an empty array, [])\n   * classificationList, setClassificationList (default should be an empty array, [])\n   * queryString, setQueryString (default should be an empty string, '')\n   * century, setCentury (default should be the string 'any')\n   * classification, setClassification (default should be the string 'any')\n   */\n\n  const [centuryList, setCenturyList] = useState([])\n  const [classificationList, setClassificationList] = useState([])\n  const [queryString, setQueryString] = useState(\"\")\n  const [century, setCentury] = useState(\"any\")\n  const [classification, setClassification] = useState(\"any\")\n\n\n\n  /**\n   * Inside of useEffect, use Promise.all([]) with fetchAllCenturies and fetchAllClassifications\n   * \n   * In the .then() callback pass the returned lists to setCenturyList and setClassificationList\n   * \n   * Make sure to console.error on caught errors from the API methods.\n   */\n  useEffect(() => {\n    // fetchAllCenturies()\n    // fetchAllClassifications()\n\n    Promise.all([fetchAllCenturies(), fetchAllClassifications()])\n      .then(([centuries, classifications]) => {\n        setCenturyList(centuries)\n        setClassificationList(classifications)\n      })\n      .catch(console.error)\n\n\n  }, []);\n\n  /**\n   * This is a form element, so we need to bind an onSubmit handler to it which:\n   * \n   * calls event.preventDefault()\n   * calls setIsLoading, set it to true\n   * \n   * then, in a try/catch/finally block:\n   * \n   * try to:\n   * - get the results from fetchQueryResults({ century, classification, queryString })\n   * HINT: Look at your state\n   * - pass them to setSearchResults\n   * \n   * catch: error to console.error\n   * \n   * finally: call setIsLoading, set it to false\n   */\n\n\n  return (<form id=\"search\" onSubmit={async (event) => {\n    event.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const results = await fetchQueryResults({ century, classification, queryString })\n      setSearchResults(results)\n    } catch (error) {\n      console.error()\n    } finally {\n      setIsLoading(false)\n    }\n  }}>\n    <fieldset>\n      <label htmlFor=\"keywords\">Query</label>\n      <input\n        id=\"keywords\"\n        type=\"text\"\n        placeholder=\"enter keywords...\"\n        value={queryString}\n        onChange={event => setQueryString(event.target.value)} />\n    </fieldset>\n    <fieldset>\n      <label htmlFor=\"select-classification\">Classification <span className=\"classification-count\">({classificationList.length})</span></label>\n      <select\n        name=\"classification\"\n        id=\"select-classification\"\n        value={classification}\n        onChange={event => setClassification(event.target.value)}>\n        <option value=\"any\">Any</option>\n        {\n          //   {\n          //     \"objectcount\": 5623,\n          //     \"id\": 30,\n          //     \"lastupdate\": \"2015-11-22T03:17:45-0500\",\n          //     \"name\": \"Sculpture\",\n          //     \"classificationid\": 30\n          // }\n          classificationList.map((classification, idx) => {\n            return <option key={`${idx}:${classification.name}`} value={classification.name}>{classification.name}</option>\n            // <option value=\"Sculpture\">Sculpture</option>\n          })\n        }\n      </select>\n    </fieldset>\n    <fieldset>\n      <label htmlFor=\"select-century\">Century <span className=\"century-count\">({centuryList.length})</span></label>\n      <select\n        name=\"century\"\n        id=\"select-century\"\n        value={century}\n        onChange={event => setCentury(event.target.value)}>\n        <option value=\"any\">Any</option>\n        {/* map over the centuryList, return an <option /> */\n          //   {\n          //     \"id\": 37525374,\n          //     \"objectcount\": 28,\n          //     \"lastupdate\": \"2015-11-22T03:17:52-0500\",\n          //     \"temporalorder\": 3,\n          //     \"name\": \"6th millennium BCE\"\n          // }\n          centuryList.map((century, idx) =>\n            <option key={`${idx}:${century.name}`} value={century.name}>\n              {century.name}\n            </option>\n          )\n        }\n      </select>\n    </fieldset>\n    <button>SEARCH</button>\n  </form>\n  )\n}\n\nexport default Search;","import React from 'react';\n\n/**\n * Create/export a component called Title which uses this static HTML as the template:\n * \n * <div id=\"title\">\n *   <h1>\n *     The Art Collector\n *   </h1>\n *   <h5>\n *     Search the Harvard Art Museums' Private Collections\n *   </h5>\n * </div>\n */\n\nconst Title = () => {\n    return (\n        <div id=\"title\">\n            <h1>The Art Collector</h1>\n            <h5>Search the Harvard Art Museums' Private Collections</h5>\n        </div>\n    )\n}\n\nexport default Title","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// These imports won't work until you fix ./components/index.js\nimport {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';\n\nconst App = () => {\n  /**\n   * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\n   * be made here, so create state pairs using useState() for:\n   * \n   * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\n   * featuredResult, setFeaturedResult (default should be null)\n   * isLoading, setIsLoading (default should be false)\n   */\n\n  const [searchResults, setSearchResults] = useState({ info: {}, records: [] })\n  const [featuredResult, setFeaturedResult] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n\n\n  return <div className=\"app\">\n    {/* <Title /> is static, doesn't need any props */}\n    <Title />\n    {/* <Search /> needs props for setIsLoading and setSearchResults (trigger <Loading /> on search start/end, and transfer results to preview) */}\n    <Search setIsLoading={setIsLoading} setSearchResults={setSearchResults}/>\n    {/* <Preview /> needs props for searchResults, setIsLoading and setSearchResults (clicking prev/next buttons), and setFeaturedResult (clicking a preview) */}\n    <Preview searchResults={searchResults} setIsLoading={setIsLoading} setSearchResults={setSearchResults} setFeaturedResult={setFeaturedResult}/>\n    {/* <Feature /> needs props for featuredResult, as well as setIsLoading and setSearchResults (clicking on searchable properties) */}\n    <Feature featuredResult={featuredResult} setIsLoading={setIsLoading} setSearchResults={setSearchResults}/>\n    {/* <Loading /> is static, but should only render when isLoading is true */}\n    {isLoading ? <Loading /> : null} {/* use a ternary and render null if isLoading is false */}\n  </div>\n}\n\n/**\n * Bootstrap the <App /> component into the '#app' element in the DOM,\n * using ReactDOM.render();\n */\n\nReactDOM.render(<App />, document.getElementById(\"app\"))\n\n"],"sourceRoot":""}